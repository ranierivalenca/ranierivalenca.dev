/* Variables and mixins declared here will be available in all other SCSS files */

// https://css-tricks.com/the-current-state-of-styling-scrollbars-in-css/
@mixin scrollbars(
	$size: 10px,
	$foreground-color: #8b5cf6,
	$background-color: #333
) {
	// For Chrome & Safari
	&::-webkit-scrollbar {
		width: $size;
		height: $size;
	}
	&::-webkit-scrollbar-thumb {
		background: $foreground-color;
	}
	&::-webkit-scrollbar-track {
		background: $background-color;
	}

	// Standard version (Firefox only for now)
	scrollbar-color: $foreground-color $background-color;
}

@mixin anchors {
  a {
    @apply text-cyan-400 font-bold cursor-pointer;
    &:hover {
      @apply underline;
    }
  }
}


// https://gist.github.com/kamikat/c4d472ce3c61feec6376
///////////////////////////////////////////////////////////
// Plain SASS Trigonometry Algorithm in Taylor Expansion //
//                                                       //
// Based on                                              //
//      http://japborst.net/posts/sass-sines-and-cosines //
///////////////////////////////////////////////////////////

$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1{
    @for $i from 0 through -$exp {
      $value: calc($value / $base);
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0{
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == "deg" {
    $angle: calc($angle / 180deg * $pi);
  }
  @if unit($angle) == "rad" {
    $angle: calc($angle / 1rad);
  }
  @return $angle;
}

@function sin($angle){
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + calc(pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle){
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + calc( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
  }
  @return $cos;
}

@function tan($angle){
  @return sin($angle) / cos($angle);
}